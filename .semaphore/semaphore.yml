version: v1.0
name: Performous build
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  minutes: 30
blocks:
  - name: Ubuntu 18.04 Build
    execution_time_limit:
      minutes: 15
    dependencies: []
    task:
      prologue:
        commands:
          - echo "Installing Performous dependencies..."
          - sudo apt -y update
          - sudo add-apt-repository -y ppa:litenstein/performous-bionic
          - sudo apt -y install cmake gettext help2man clang-9 gcc-8 g++-8 libepoxy-dev libsdl2-dev libcairo2-dev libpango1.0-dev librsvg2-dev libboost-all-dev libavcodec-dev libavformat-dev libswscale-dev libswresample-dev libpng-dev libjpeg-dev libxml++3.0-dev portaudio19-dev libopencv-dev libportmidi-dev libqrencode-dev libicu-dev libglm-dev libopenblas-dev libfftw3-dev
          - checkout
          - git submodule update --init --recursive
      jobs:
        - name: GCC-8.4.0 Build
          env_vars:
            - name: CC
              value: gcc-8
            - name: CXX
              value: g++-8
          commands:
            - mkdir build.gcc && cd build.gcc && cmake -DENABLE_WEBSERVER=ON -DCMAKE_VERBOSE_MAKEFILE=1 -DENABLE_WEBCAM=ON ..
            - make VERBOSE=1
        - name: Clang-9 Build
          env_vars:
            - name: CC
              value: clang-9
            - name: CXX
              value: clang++-9
          commands:
            - mkdir build.clang && cd build.clang && cmake -DENABLE_WEBSERVER=ON -DCMAKE_VERBOSE_MAKEFILE=1 -DENABLE_WEBCAM=ON ..
            - make VERBOSE=1
  - name: MacOS 10.14.6 Build
    execution_time_limit:
      minutes: 15
    dependencies: []
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode11
      secrets:
        - name: macos-ci-pubkey
        - name: macos-cache
        - name: ignore-ci-homebrew
      prologue:
        commands:
          - chmod 400 /Users/semaphore/macos-cache-key
          - mv /Users/semaphore/macos-cache-key /Users/semaphore/.ssh/semaphore_cache_key
          - echo Trying to restore cache...
          - ssh-keyscan -p 29920 66.185.20.68 >> /Users/semaphore/.ssh/known_hosts && ssh-add /Users/semaphore/.ssh/semaphore_cache_key
          - export PATH=/opt/local/bin:/opt/local/sbin:$PATH
          - export MANPATH=/opt/local/share/man:$MANPATH
          - export DISPLAY=:0.0
      jobs:
        - name: Generate app bundle
          commands:
            - cache restore macports-10_15
            - mkdir -p /Users/semaphore/local
            - mkdir -p /Users/semaphore/Applications
            - sudo ln -sf /Users/semaphore/local/Applications /Users/semaphore/Applications/MacPorts
            - sudo ln -sf /Users/semaphore/local/ /opt/local
            - test -e /Users/semaphore/local/bin/port || ( curl -LJ https://www.dropbox.com/s/4c5oav6za5l4gvv/macports-10_15-install.tar.gz?dl=1 | tar x )
            - checkout
            - git submodule update --init --recursive
            - patch --verbose -ui /Users/semaphore/patch-cmake-ignore-CI-homebrew.patch
            - cd osx-utils
            - chmod +x ./performous-app-build.sh
            - ./performous-app-build.sh -D
            - cd /Users/semaphore
            - cache store macports-10_15 ./local
  - name: Ubuntu 18.04 Build (Meson)
    execution_time_limit:
      minutes: 10
    dependencies: []
    task:
      prologue:
        commands:
          - echo "Installing Performous dependencies..."
          - sudo apt-get update -y
          - sudo apt-get install -y ninja-build gettext clang-9 gcc-8 g++-8 python3-dev python3-pip
          - sudo apt-get install -y libepoxy-dev libsdl2-dev libcairo2-dev libpango1.0-dev librsvg2-dev libboost-iostreams-dev libboost-locale-dev libboost-system-dev libboost-program-options-dev libavcodec-dev libavformat-dev libswscale-dev libswresample-dev libpng-dev libjpeg-dev libxml++2.6-dev portaudio19-dev libicu-dev libopencv-dev libportmidi-dev libglm-dev libaubio-dev libcpprest-dev
          - sem-version python 3.9
          - sudo pip3 install meson
          - echo "Checking out..."
          - checkout
          # Clean up the 3rdparty folder (aubio is installed with brew) and pull ced from its repository
          - rm -rf 3rdparty
          - git clone --depth 1 https://github.com/google/compact_enc_det.git 3rdparty/ced
          # Checkout should fail if (ever) google ced is updated, providing an opportunity to review the changes
          - git -C 3rdparty/ced checkout 37529e6
      jobs:
        - name: GCC-8.4.0 Build
          env_vars:
            - name: CC
              value: gcc-8
            - name: CXX
              value: g++-8
          commands:
            - echo "Setting up build..."
            - meson setup --buildtype release build.gcc -Dusewebcam=true -Dusemididrum=true -Dusewebserver=true -Dwarningaserror=true
            - artifact push job --expire-in 1w build.gcc/meson-info
            - artifact push job --expire-in 1w build.gcc/meson-logs
            - artifact push job --expire-in 1w build.gcc/build.ninja
            - artifact push job --expire-in 1w build.gcc/compile_commands.json
            - echo "Building..."
            - meson compile -C build.gcc
            - artifact push job --expire-in 1w build.gcc/.ninja_log
        - name: Clang-9 Build
          env_vars:
            - name: CC
              value: clang-9
            - name: CXX
              value: clang++-9
          commands:
            - echo "Setting up build..."
            - meson setup --buildtype release build.clang -Dusewebcam=true -Dusemididrum=true -Dusewebserver=true
            - artifact push job --expire-in 1w build.clang/meson-info
            - artifact push job --expire-in 1w build.clang/meson-logs
            - artifact push job --expire-in 1w build.clang/build.ninja
            - artifact push job --expire-in 1w build.clang/compile_commands.json
            - echo "Building..."
            - meson compile -C build.clang
            - artifact push job --expire-in 1w build.clang/.ninja_log
