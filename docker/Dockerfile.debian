# syntax=docker/dockerfile:1
ARG OS_VERSION
## Use the official Debian <OS_VERSION> Image from Dockerhub
FROM docker.io/library/debian:${OS_VERSION}

## Copy OS_VERSION into ENV so we can use it in scripts too
ARG OS_VERSION
ENV OS_VERSION=${OS_VERSION}
ENV PACKAGE_TYPE="DEB"

## Set up environment variables so the tzdata install doesn't
## hang on asking for user input for configuration
ARG DEBIAN_FRONTEND="noninteractive"
ARG TZ="America/New_York"

COPY platform_flags.sh ./platform_flags.sh

## Install the deps and create the build directory
RUN <<EOR
#!/bin/bash -x
	touch /etc/SHOULD_USE_BACKPORTS
	if [[ "${OS_VERSION}" == "11" ]]; then
		. ./platform_flags.sh
		echo 'deb http://deb.debian.org/debian bullseye-backports main' | tee /etc/apt/sources.list.d/backports.list
		export_platform_flags '-DSELF_BUILT_AUBIO=ALWAYS -DSELF_BUILT_CED=ALWAYS -DSELF_BUILT_JSON=ALWAYS'
		echo 'export USE_BACKPORTS="-t bullseye-backports"' | tee /etc/SHOULD_USE_BACKPORTS
	fi
EOR

RUN <<EOR
#!/bin/bash -x
	. /etc/SHOULD_USE_BACKPORTS
	apt-get -y update
	apt-get install -y ${USE_BACKPORTS} git cmake cmake-data build-essential \
		gcc g++ gettext help2man libopenblas-dev libfftw3-dev libicu-dev libepoxy-dev \
		libsdl2-dev libfreetype6-dev libpango1.0-dev librsvg2-dev libxml++2.6-dev \
		libavcodec-dev libavformat-dev libswscale-dev libjpeg-dev \
		portaudio19-dev libglm-dev libboost-filesystem-dev \
		libboost-iostreams-dev libboost-locale-dev libboost-system-dev \
		libboost-program-options-dev libssl-dev libcpprest-dev \
		libportmidi-dev libopencv-dev libaubio-dev nlohmann-json3-dev \
		libfmt-dev ca-certificates file libgmock-dev libgtest-dev libspdlog-dev
	apt-get clean
	mkdir -p /root/performous
EOR

## Copy in the build script to make things easy
COPY build_performous.sh /root/performous/build_performous.sh
COPY run_tests.sh /root/performous/run_tests.sh

WORKDIR /root/performous
