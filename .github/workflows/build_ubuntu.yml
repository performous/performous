name: Build Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: Info
      run: echo GITHUB_WORKSPACE=$GITHUB_WORKSPACE
      
    - name: Checkout 
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Apt update
      run: apt-get update

    - name: Install tools
      run: apt-get -y install cmake gettext help2man openssl wget clang-3.8

    - name: Install libraries
      run: |
        apt-get -y install fftw3-dev fftw3
        apt-get -y install software-properties-common
        apt-get -y install libblas-dev #liblapack-dev
        apt-get -y install libsdl2-dev 
        apt-get -y install libcairo2-dev libpango1.0-dev librsvg2-dev
        apt-get -y install libboost-all-dev
        apt-get -y install libavcodec-dev libavformat-dev libswscale-dev libswresample-dev
        apt-get -y install libpng-dev libjpeg-dev libxml++2.6-dev libicu-dev libglm-dev 
        apt-get -y install libepoxy-dev libqrencode-dev libssl-dev 
        apt-get -y install portaudio19-dev libportmidi-dev 
        #apt-get -y install libepoxy-dev libsdl2-dev libcairo2-dev libpango1.0-dev librsvg2-dev libboost-all-dev libavcodec-dev libavformat-dev libswscale-dev libswresample-dev libpng-dev libjpeg-dev libxml++2.6-dev portaudio19-dev libopencv-dev libportmidi-dev libqrencode-dev libicu-dev libglm-dev libssl-dev 

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      #run: cmake -E make_directory ${{runner.workspace}}/build
      run: |
        mkdir -p build
        #cd build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE || cat CMakeFiles/CMakeError.log 

    - name: Build
      working-directory: build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
